@model WebReportMWM.Models.Entitys.Sector
@{
    ViewBag.Title = "create";

    bool modeCreate = (bool)ViewBag.ModeCreate;
    string textAction = modeCreate ? "Crear" : "Actualizar";
}

<h2>@textAction</h2>

@using (Html.BeginForm(modeCreate ? "Create" : "Update", "CrudSectores", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sector</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@textAction class="btn btn-danger" />
                @Html.ActionLink("Listar", "List", "CrudSectores", new { @class = "btn btn-info" })
                @ViewBag.Message
            </div>
        </div>
    </div>
    if (TempData["MessagesError"] != null && ((List<string>)TempData["MessagesError"]).Count > 0)
    {
        foreach (string msg in (List<string>)TempData["MessagesError"])
        {
            <p style="color:red;">@msg</p>
        }
    }
}


