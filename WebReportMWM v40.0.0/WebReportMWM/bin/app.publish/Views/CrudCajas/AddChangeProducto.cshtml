@model WebReportMWM.Models.Entitys.Caja
@{
    ViewBag.Title = "ChangeProducto";
    IEnumerable<SelectListItem> ListProductosAContener = WebReportMWM.services.DbServices.GetProductosNoCajasCombosInsumos();

}

<h2>Cambiar Producto asignado a Caja</h2>
<h3>@Model.NombreCaja</h3>

@using (Html.BeginForm("AddChangeProducto", "CrudCajas", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdProductoCaja)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Caja", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.NombreCaja, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Producto a Asignar", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.IdProducto, ListProductosAContener, new { @class = "form-control", style = "Width:50%", id = "iddropdownlist" })
            @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="cambiar" class="btn btn-danger" />
            @Html.ActionLink("Listar", "List", "CrudCajas", new { idRowSelect = Model.IdProductoCaja }, new { @class = "btn btn-info" })
            @ViewBag.Message
        </div>
    </div>
</div>

    if (TempData["MessagesError"] != null && ((List<string>)TempData["MessagesError"]).Count > 0)
    {
        foreach (string msg in (List<string>)TempData["MessagesError"])
        {
            <p style="color:red;">@msg</p>
        }
    }
}


