@model WebReportMWM.Models.Entitys.InsumoPrimario
@{
    ViewBag.Title = "UpdateInsumos";

    var ReqConfirmacion = new List<SelectListItem>();
    ReqConfirmacion.Add(new SelectListItem { Text = "NO", Value = "false" });
    ReqConfirmacion.Add(new SelectListItem { Text = "SI", Value = "true" });
}

<h2>Actualizar Insumo Primario</h2>

@using (Html.BeginForm("UpdateInsumoPrimario", "CrudProductoInsumos", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Model.NombreProducto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdProducto)
    @Html.HiddenFor(model => model.Id)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <input type="hidden" id="idInsumoPrimario" name="idInsumoPrimario" value="@Model.Id" />
    <input type="hidden" id="idInsumoSecundario" name="idInsumoSecundario" value="@Model.Id" />
    <div class="form-group">
        @Html.Label("Nombre Producto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.NombreProducto, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Insumo Primario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Unidades, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Unidades, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Unidades, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Requiere Confirmación", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RequiereConfirmacion, ReqConfirmacion, new { htmlAttributes = new { @class = "form-control", id = "iddropdownlistdisponible" } })
            @Html.ValidationMessageFor(model => model.RequiereConfirmacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Actualizar" class="btn btn-danger" />
            @Html.ActionLink("Volver", "DetailInsumosPrimarios",
            new
            {
                IdInsumoPrimarioRowSelect = Model.Id,
                IdInsumoSecundarioRowSelect = Model.Id,
                IdProducto = Model.IdProducto,
                NombreProducto = Model.NombreProducto,
            }, new { @class = "btn btn-info" })
            @ViewBag.Message
        </div>
    </div>

</div>

    if (TempData["MessagesError"] != null && ((List<string>)TempData["MessagesError"]).Count > 0)
    {
        foreach (string msg in (List<string>)TempData["MessagesError"])
        {
            <p style="color:red;">@msg</p>
        }
    }
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    </script>

}

